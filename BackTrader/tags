!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
FinanceDataSource	.\Strategy_KAMA_1.py	/^import FinanceDataSource$/;"	namespace
FinanceDataSource	.\Strategy_MACD_1.py	/^import FinanceDataSource$/;"	namespace
FinanceDataSource	.\Strategy_MA_1.py	/^import FinanceDataSource$/;"	namespace
FinanceDataSource	.\Strategy_MA_2.py	/^import FinanceDataSource$/;"	namespace
FinanceDataSource	.\Strategy_MA_3.py	/^import FinanceDataSource$/;"	namespace
For	.\Strategy_KAMA_1.py	/^import datetime  # For datetime objects$/;"	namespace
StrategyBase	.\Strategy_MA_4.py	/^from Strategy_main import StrategyBase$/;"	namespace
StrategyBase	.\Strategy_main.py	/^class StrategyBase(bt.Strategy):$/;"	class	inherits:bt.Strategy
Strategy_KAMA	.\Strategy_KAMA_1.py	/^class Strategy_KAMA(bt.Strategy):$/;"	class	inherits:bt.Strategy
Strategy_KAMA	.\Strategy_KAMA_2.py	/^class Strategy_KAMA(bt.Strategy):$/;"	class	inherits:bt.Strategy
Strategy_MA	.\Strategy_MA_1.py	/^class Strategy_MA(bt.Strategy):$/;"	class	inherits:bt.Strategy
Strategy_MA	.\Strategy_MA_2.py	/^class Strategy_MA(bt.Strategy):$/;"	class	inherits:bt.Strategy
Strategy_MA	.\Strategy_MA_3.py	/^class Strategy_MA(bt.Strategy):$/;"	class	inherits:bt.Strategy
Strategy_MA	.\Strategy_MA_4.py	/^class Strategy_MA(StrategyBase):$/;"	class	inherits:StrategyBase
Strategy_MACD	.\Strategy_MACD_1.py	/^class Strategy_MACD(bt.Strategy):$/;"	class	inherits:bt.Strategy
__init__	.\Strategy_KAMA_1.py	/^    def __init__(self):$/;"	member	class:Strategy_KAMA	access:public
__init__	.\Strategy_KAMA_2.py	/^    def __init__(self):$/;"	member	class:Strategy_KAMA	access:public
__init__	.\Strategy_MACD_1.py	/^    def __init__(self):$/;"	member	class:Strategy_MACD	access:public
__init__	.\Strategy_MA_1.py	/^    def __init__(self):$/;"	member	class:Strategy_MA	access:public
__init__	.\Strategy_MA_2.py	/^    def __init__(self):$/;"	member	class:Strategy_MA	access:public
__init__	.\Strategy_MA_3.py	/^    def __init__(self):$/;"	member	class:Strategy_MA	access:public
__init__	.\Strategy_MA_4.py	/^    def __init__(self):$/;"	member	class:Strategy_MA	access:public
__init__	.\Strategy_main.py	/^    def __init__(self):$/;"	member	class:StrategyBase	access:public
absolute_import	.\Strategy_KAMA_1.py	/^from __future__ import (absolute_import, division, print_function,$/;"	namespace
absolute_import	.\Strategy_KAMA_2.py	/^from __future__ import (absolute_import, division, print_function,$/;"	namespace
absolute_import	.\Strategy_MA_1.py	/^from __future__ import (absolute_import, division, print_function,$/;"	namespace
absolute_import	.\Strategy_MA_2.py	/^from __future__ import (absolute_import, division, print_function,$/;"	namespace
bt	.\Strategy_KAMA_1.py	/^import backtrader as bt$/;"	namespace
bt	.\Strategy_KAMA_2.py	/^import backtrader as bt$/;"	namespace
bt	.\Strategy_MACD_1.py	/^import backtrader as bt$/;"	namespace
bt	.\Strategy_MA_1.py	/^import backtrader as bt$/;"	namespace
bt	.\Strategy_MA_2.py	/^import backtrader as bt$/;"	namespace
bt	.\Strategy_MA_3.py	/^import backtrader as bt$/;"	namespace
bt	.\Strategy_MA_4.py	/^import backtrader as bt$/;"	namespace
bt	.\Strategy_main.py	/^import backtrader as bt$/;"	namespace
cerebro	.\Strategy_KAMA_1.py	/^    cerebro = bt.Cerebro()$/;"	variable
cerebro	.\Strategy_MACD_1.py	/^    cerebro = bt.Cerebro()$/;"	variable	class:Strategy_MACD
cerebro	.\Strategy_MA_1.py	/^    cerebro = bt.Cerebro()$/;"	variable	class:Strategy_MA
cerebro	.\Strategy_MA_2.py	/^    cerebro = bt.Cerebro()$/;"	variable	class:Strategy_MA
cerebro	.\Strategy_MA_3.py	/^    cerebro = bt.Cerebro()$/;"	variable	class:Strategy_MA
data	.\Strategy_KAMA_1.py	/^    data = bt.feeds.PandasData(dataname=dataframe)$/;"	variable
data	.\Strategy_MACD_1.py	/^    data = bt.feeds.PandasData(dataname=dataframe)$/;"	variable	class:Strategy_MACD
data	.\Strategy_MA_1.py	/^    data = bt.feeds.PandasData(dataname=dataframe)$/;"	variable	class:Strategy_MA
data	.\Strategy_MA_2.py	/^    data = bt.feeds.PandasData(dataname=dataframe)$/;"	variable	class:Strategy_MA
data	.\Strategy_MA_3.py	/^    data = bt.feeds.PandasData(dataname=dataframe)$/;"	variable	class:Strategy_MA
dataframe	.\Strategy_KAMA_1.py	/^    dataframe = FinanceDataSource.get_data($/;"	variable
dataframe	.\Strategy_MACD_1.py	/^    dataframe = FinanceDataSource.get_data($/;"	variable	class:Strategy_MACD
dataframe	.\Strategy_MA_1.py	/^    dataframe = FinanceDataSource.get_data(FinanceDataSource.str_tonghuashun, FinanceDataSource.tonghuashun_AGTD)$/;"	variable	class:Strategy_MA
dataframe	.\Strategy_MA_2.py	/^    dataframe = FinanceDataSource.get_data(FinanceDataSource.str_tonghuashun, FinanceDataSource.tonghuashun_AGTD)$/;"	variable	class:Strategy_MA
dataframe	.\Strategy_MA_3.py	/^    dataframe = FinanceDataSource.get_data(FinanceDataSource.str_tonghuashun, FinanceDataSource.tonghuashun_AGTD)$/;"	variable	class:Strategy_MA
datetime	.\Strategy_KAMA_1.py	/^import datetime  # For datetime objects$/;"	namespace
division	.\Strategy_KAMA_1.py	/^from __future__ import (absolute_import, division, print_function,$/;"	namespace
division	.\Strategy_KAMA_2.py	/^from __future__ import (absolute_import, division, print_function,$/;"	namespace
division	.\Strategy_MA_1.py	/^from __future__ import (absolute_import, division, print_function,$/;"	namespace
division	.\Strategy_MA_2.py	/^from __future__ import (absolute_import, division, print_function,$/;"	namespace
get_need_position	.\Strategy_MA_4.py	/^    def get_need_position(self):$/;"	member	class:Strategy_MA	access:public
log	.\Strategy_KAMA_1.py	/^    def log(self, txt, dt=None):$/;"	member	class:Strategy_KAMA	access:public
log	.\Strategy_KAMA_2.py	/^    def log(self, txt, dt=None):$/;"	member	class:Strategy_KAMA	access:public
log	.\Strategy_MACD_1.py	/^    def log(self, txt, dt=None):$/;"	member	class:Strategy_MACD	access:public
log	.\Strategy_MA_1.py	/^    def log(self, txt, dt=None):$/;"	member	class:Strategy_MA	access:public
log	.\Strategy_MA_2.py	/^    def log(self, txt, dt=None):$/;"	member	class:Strategy_MA	access:public
log	.\Strategy_MA_3.py	/^    def log(self, txt, dt=None, isprint=False):$/;"	member	class:Strategy_MA	access:public
log	.\Strategy_main.py	/^    def log(self, txt, dt=None, isprint=False):$/;"	member	class:StrategyBase	access:public
next	.\Strategy_KAMA_1.py	/^    def next(self):$/;"	member	class:Strategy_KAMA	access:public
next	.\Strategy_KAMA_2.py	/^    def next(self):$/;"	member	class:Strategy_KAMA	access:public
next	.\Strategy_MACD_1.py	/^    def next(self):$/;"	member	class:Strategy_MACD	access:public
next	.\Strategy_MA_1.py	/^    def next(self):$/;"	member	class:Strategy_MA	access:public
next	.\Strategy_MA_2.py	/^    def next(self):$/;"	member	class:Strategy_MA	access:public
next	.\Strategy_MA_3.py	/^    def next(self):$/;"	member	class:Strategy_MA	access:public
next	.\Strategy_MA_4.py	/^    def next(self):$/;"	member	class:Strategy_MA	access:public
notify	.\Strategy_KAMA_1.py	/^    def notify(self, order):$/;"	member	class:Strategy_KAMA	access:public
notify	.\Strategy_KAMA_2.py	/^    def notify(self, order):$/;"	member	class:Strategy_KAMA	access:public
notify	.\Strategy_MACD_1.py	/^    def notify(self, order):$/;"	member	class:Strategy_MACD	access:public
notify	.\Strategy_MA_1.py	/^    def notify(self, order):$/;"	member	class:Strategy_MA	access:public
notify	.\Strategy_MA_2.py	/^    def notify(self, order):$/;"	member	class:Strategy_MA	access:public
notify	.\Strategy_MA_3.py	/^    def notify(self, order):$/;"	member	class:Strategy_MA	access:public
notify	.\Strategy_main.py	/^    def notify(self, order):$/;"	member	class:StrategyBase	access:public
objects	.\Strategy_KAMA_1.py	/^import datetime  # For datetime objects$/;"	namespace
params	.\Strategy_MACD_1.py	/^    params = (('fastperiod', 12), ('slowperiod', 26), ('signalperiod', 9))$/;"	variable	class:Strategy_MACD
params	.\Strategy_MA_1.py	/^    params = (('ma1', 5), ('ma2', 10), ('ma3', 20))$/;"	variable	class:Strategy_MA
params	.\Strategy_MA_2.py	/^    params = (('ma1', 5), ('ma2', 10), ('ma3', 20))$/;"	variable	class:Strategy_MA
params	.\Strategy_MA_3.py	/^    params = ($/;"	variable	class:Strategy_MA
params	.\Strategy_MA_4.py	/^    params = ($/;"	variable	class:Strategy_MA
print_function	.\Strategy_KAMA_1.py	/^from __future__ import (absolute_import, division, print_function,$/;"	namespace
print_function	.\Strategy_KAMA_2.py	/^from __future__ import (absolute_import, division, print_function,$/;"	namespace
print_function	.\Strategy_MA_1.py	/^from __future__ import (absolute_import, division, print_function,$/;"	namespace
print_function	.\Strategy_MA_2.py	/^from __future__ import (absolute_import, division, print_function,$/;"	namespace
project_opened	.\.ropeproject\config.py	/^def project_opened(project):$/;"	function	access:public
results	.\Strategy_MACD_1.py	/^    results = cerebro.run()$/;"	variable	class:Strategy_MACD
results	.\Strategy_MA_1.py	/^    results = cerebro.run()$/;"	variable	class:Strategy_MA
results	.\Strategy_MA_2.py	/^    results = cerebro.run()$/;"	variable	class:Strategy_MA
results	.\Strategy_MA_3.py	/^    results = cerebro.run()$/;"	variable	class:Strategy_MA
set_prefs	.\.ropeproject\config.py	/^def set_prefs(prefs):$/;"	function	access:public
stop	.\Strategy_MA_3.py	/^    def stop(self):$/;"	member	class:Strategy_MA	access:public
stop	.\Strategy_main.py	/^    def stop(self):$/;"	member	class:StrategyBase	access:public
strat	.\Strategy_MACD_1.py	/^    strat = results[0]$/;"	variable	class:Strategy_MACD
strat	.\Strategy_MA_1.py	/^    strat = results[0]$/;"	variable	class:Strategy_MA
strat	.\Strategy_MA_2.py	/^    strat = results[0]$/;"	variable	class:Strategy_MA
strat	.\Strategy_MA_3.py	/^    strat = results[0]$/;"	variable	class:Strategy_MA
sys	.\Strategy_KAMA_1.py	/^import sys$/;"	namespace
sys	.\Strategy_KAMA_2.py	/^import sys$/;"	namespace
sys	.\Strategy_MACD_1.py	/^import sys$/;"	namespace
sys	.\Strategy_MA_1.py	/^import sys$/;"	namespace
sys	.\Strategy_MA_2.py	/^import sys$/;"	namespace
sys	.\Strategy_MA_3.py	/^import sys$/;"	namespace
